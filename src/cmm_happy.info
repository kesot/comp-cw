-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.4 from cmm_happy.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_happyParseToTree -> DeclarationList         (0)
	DeclarationList -> Declaration                     (1)
	DeclarationList -> DeclarationList Declaration     (2)
	Declaration -> VarDeclaration                      (3)
	Declaration -> FunDeclaration                      (4)
	VarDeclaration -> "int" name ";"                   (5)
	VarDeclaration -> "int" name "[" num "]" ";"       (6)
	FunDeclaration -> "int" name "(" Params ")" CompoundStmt   (7)
	FunDeclaration -> "void" name "(" Params ")" CompoundStmt   (8)
	Params -> "void"                                   (9)
	Params -> ParamList                                (10)
	ParamList -> Param                                 (11)
	ParamList -> ParamList "," Param                   (12)
	Param -> "int" name                                (13)
	Param -> "int" name "[" "]"                        (14)
	CompoundStmt -> "{" LocalDeclarations StatementList "}"   (15)
	LocalDeclarations ->                               (16)
	LocalDeclarations -> LocalDeclarations VarDeclaration   (17)
	StatementList -> Statement                         (18)
	StatementList -> StatementList Statement           (19)
	Statement -> ExpressionStmt                        (20)
	Statement -> CompoundStmt                          (21)
	Statement -> SelectionStmt                         (22)
	Statement -> IterationStmt                         (23)
	Statement -> ReturnStmt                            (24)
	Statement -> ReadStmt                              (25)
	Statement -> WriteStmt                             (26)
	ExpressionStmt -> Expression ";"                   (27)
	ExpressionStmt -> ";"                              (28)
	SelectionStmt -> "if" "(" Expression ")" Statement   (29)
	SelectionStmt -> "if" "(" Expression ")" Statement "else" Statement   (30)
	IterationStmt -> "while" "(" Expression ")" Statement   (31)
	ReturnStmt -> "return" ";"                         (32)
	ReturnStmt -> "return" Expression ";"              (33)
	ReadStmt -> "read" Var ";"                         (34)
	WriteStmt -> "write" Expression ";"                (35)
	Expression -> ExpressionHead SimpleExpression      (36)
	ExpressionHead ->                                  (37)
	ExpressionHead -> ExpressionHead Var "="           (38)
	Var -> name                                        (39)
	Var -> name "[" Expression "]"                     (40)
	SimpleExpression -> AdditiveExpression             (41)
	SimpleExpression -> AdditiveExpression Relop AdditiveExpression   (42)
	Relop -> "<="                                      (43)
	Relop -> "<"                                       (44)
	Relop -> ">"                                       (45)
	Relop -> ">="                                      (46)
	Relop -> "=="                                      (47)
	Relop -> "!="                                      (48)
	AdditiveExpression -> Term                         (49)
	AdditiveExpression -> AdditiveExpression Addop Term   (50)
	Addop -> "+"                                       (51)
	Addop -> "-"                                       (52)
	Term -> Factor                                     (53)
	Term -> Term Multop Factor                         (54)
	Multop -> "*"                                      (55)
	Multop -> "/"                                      (56)
	Factor -> "(" Expression ")"                       (57)
	Factor -> num                                      (58)
	Factor -> array                                    (59)
	Factor -> Var                                      (60)
	Factor -> Call                                     (61)
	Call -> name "(" Args ")"                          (62)
	Args ->                                            (63)
	Args -> Expression                                 (64)
	Args -> Args "," Expression                        (65)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	array          { Posed _ (Array _) }
	num            { Posed _ (Num _) }
	name           { Posed _ (Name _) }
	"["            { Posed _ (Symbol "[") }
	"]"            { Posed _ (Symbol "]") }
	"{"            { Posed _ (Symbol "{") }
	"}"            { Posed _ (Symbol "}") }
	"("            { Posed _ (Symbol "(") }
	")"            { Posed _ (Symbol ")") }
	";"            { Posed _ (Symbol ";") }
	","            { Posed _ (Symbol ",") }
	"=="           { Posed _ (Symbol "==") }
	"="            { Posed _ (Symbol "=") }
	"<="           { Posed _ (Symbol "<=") }
	"<"            { Posed _ (Symbol "<") }
	">="           { Posed _ (Symbol ">=") }
	">"            { Posed _ (Symbol ">") }
	"!="           { Posed _ (Symbol "!=") }
	"+"            { Posed _ (Symbol "+") }
	"-"            { Posed _ (Symbol "-") }
	"*"            { Posed _ (Symbol "*") }
	"/"            { Posed _ (Symbol "/") }
	"int"          { Posed _ (Symbol "int") }
	"void"         { Posed _ (Symbol "void") }
	"if"           { Posed _ (Symbol "if") }
	"else"         { Posed _ (Symbol "else") }
	"while"        { Posed _ (Symbol "while") }
	"return"       { Posed _ (Symbol "return") }
	"read"         { Posed _ (Symbol "read") }
	"write"        { Posed _ (Symbol "write") }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_happyParseToTree rule  0
	DeclarationList rules 1, 2
	Declaration     rules 3, 4
	VarDeclaration  rules 5, 6
	FunDeclaration  rules 7, 8
	Params          rules 9, 10
	ParamList       rules 11, 12
	Param           rules 13, 14
	CompoundStmt    rule  15
	LocalDeclarations rules 16, 17
	StatementList   rules 18, 19
	Statement       rules 20, 21, 22, 23, 24, 25, 26
	ExpressionStmt  rules 27, 28
	SelectionStmt   rules 29, 30
	IterationStmt   rule  31
	ReturnStmt      rules 32, 33
	ReadStmt        rule  34
	WriteStmt       rule  35
	Expression      rule  36
	ExpressionHead  rules 37, 38
	Var             rules 39, 40
	SimpleExpression rules 41, 42
	Relop           rules 43, 44, 45, 46, 47, 48
	AdditiveExpression rules 49, 50
	Addop           rules 51, 52
	Term            rules 53, 54
	Multop          rules 55, 56
	Factor          rules 57, 58, 59, 60, 61
	Call            rule  62
	Args            rules 63, 64, 65

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	"int"          shift, and enter state 5
	"void"         shift, and enter state 6

	DeclarationListgoto state 7
	Declaration    goto state 2
	VarDeclaration goto state 3
	FunDeclaration goto state 4

State 1


	"int"          shift, and enter state 5
	"void"         shift, and enter state 6

	Declaration    goto state 2
	VarDeclaration goto state 3
	FunDeclaration goto state 4

State 2

	DeclarationList -> Declaration .                    (rule 1)

	"int"          reduce using rule 1
	"void"         reduce using rule 1
	%eof           reduce using rule 1


State 3

	Declaration -> VarDeclaration .                     (rule 3)

	"int"          reduce using rule 3
	"void"         reduce using rule 3
	%eof           reduce using rule 3


State 4

	Declaration -> FunDeclaration .                     (rule 4)

	"int"          reduce using rule 4
	"void"         reduce using rule 4
	%eof           reduce using rule 4


State 5

	VarDeclaration -> "int" . name ";"                  (rule 5)
	VarDeclaration -> "int" . name "[" num "]" ";"      (rule 6)
	FunDeclaration -> "int" . name "(" Params ")" CompoundStmt    (rule 7)

	name           shift, and enter state 10


State 6

	FunDeclaration -> "void" . name "(" Params ")" CompoundStmt    (rule 8)

	name           shift, and enter state 9


State 7

	%start_happyParseToTree -> DeclarationList .        (rule 0)
	DeclarationList -> DeclarationList . Declaration    (rule 2)

	"int"          shift, and enter state 5
	"void"         shift, and enter state 6
	%eof           accept

	Declaration    goto state 8
	VarDeclaration goto state 3
	FunDeclaration goto state 4

State 8

	DeclarationList -> DeclarationList Declaration .    (rule 2)

	"int"          reduce using rule 2
	"void"         reduce using rule 2
	%eof           reduce using rule 2


State 9

	FunDeclaration -> "void" name . "(" Params ")" CompoundStmt    (rule 8)

	"("            shift, and enter state 14


State 10

	VarDeclaration -> "int" name . ";"                  (rule 5)
	VarDeclaration -> "int" name . "[" num "]" ";"      (rule 6)
	FunDeclaration -> "int" name . "(" Params ")" CompoundStmt    (rule 7)

	"["            shift, and enter state 11
	"("            shift, and enter state 12
	";"            shift, and enter state 13


State 11

	VarDeclaration -> "int" name "[" . num "]" ";"      (rule 6)

	num            shift, and enter state 21


State 12

	FunDeclaration -> "int" name "(" . Params ")" CompoundStmt    (rule 7)

	"int"          shift, and enter state 18
	"void"         shift, and enter state 19

	Params         goto state 20
	ParamList      goto state 16
	Param          goto state 17

State 13

	VarDeclaration -> "int" name ";" .                  (rule 5)

	array          reduce using rule 5
	num            reduce using rule 5
	name           reduce using rule 5
	"{"            reduce using rule 5
	"("            reduce using rule 5
	";"            reduce using rule 5
	"int"          reduce using rule 5
	"void"         reduce using rule 5
	"if"           reduce using rule 5
	"while"        reduce using rule 5
	"return"       reduce using rule 5
	"read"         reduce using rule 5
	"write"        reduce using rule 5
	%eof           reduce using rule 5


State 14

	FunDeclaration -> "void" name "(" . Params ")" CompoundStmt    (rule 8)

	"int"          shift, and enter state 18
	"void"         shift, and enter state 19

	Params         goto state 15
	ParamList      goto state 16
	Param          goto state 17

State 15

	FunDeclaration -> "void" name "(" Params . ")" CompoundStmt    (rule 8)

	")"            shift, and enter state 26


State 16

	Params -> ParamList .                               (rule 10)
	ParamList -> ParamList . "," Param                  (rule 12)

	")"            reduce using rule 10
	","            shift, and enter state 25


State 17

	ParamList -> Param .                                (rule 11)

	")"            reduce using rule 11
	","            reduce using rule 11


State 18

	Param -> "int" . name                               (rule 13)
	Param -> "int" . name "[" "]"                       (rule 14)

	name           shift, and enter state 24


State 19

	Params -> "void" .                                  (rule 9)

	")"            reduce using rule 9


State 20

	FunDeclaration -> "int" name "(" Params . ")" CompoundStmt    (rule 7)

	")"            shift, and enter state 23


State 21

	VarDeclaration -> "int" name "[" num . "]" ";"      (rule 6)

	"]"            shift, and enter state 22


State 22

	VarDeclaration -> "int" name "[" num "]" . ";"      (rule 6)

	";"            shift, and enter state 32


State 23

	FunDeclaration -> "int" name "(" Params ")" . CompoundStmt    (rule 7)

	"{"            shift, and enter state 28

	CompoundStmt   goto state 31

State 24

	Param -> "int" name .                               (rule 13)
	Param -> "int" name . "[" "]"                       (rule 14)

	"["            shift, and enter state 30
	")"            reduce using rule 13
	","            reduce using rule 13


State 25

	ParamList -> ParamList "," . Param                  (rule 12)

	"int"          shift, and enter state 18

	Param          goto state 29

State 26

	FunDeclaration -> "void" name "(" Params ")" . CompoundStmt    (rule 8)

	"{"            shift, and enter state 28

	CompoundStmt   goto state 27

State 27

	FunDeclaration -> "void" name "(" Params ")" CompoundStmt .    (rule 8)

	"int"          reduce using rule 8
	"void"         reduce using rule 8
	%eof           reduce using rule 8


State 28

	CompoundStmt -> "{" . LocalDeclarations StatementList "}"    (rule 15)

	array          reduce using rule 16
	num            reduce using rule 16
	name           reduce using rule 16
	"{"            reduce using rule 16
	"("            reduce using rule 16
	";"            reduce using rule 16
	"int"          reduce using rule 16
	"if"           reduce using rule 16
	"while"        reduce using rule 16
	"return"       reduce using rule 16
	"read"         reduce using rule 16
	"write"        reduce using rule 16

	LocalDeclarationsgoto state 34

State 29

	ParamList -> ParamList "," Param .                  (rule 12)

	")"            reduce using rule 12
	","            reduce using rule 12


State 30

	Param -> "int" name "[" . "]"                       (rule 14)

	"]"            shift, and enter state 33


State 31

	FunDeclaration -> "int" name "(" Params ")" CompoundStmt .    (rule 7)

	"int"          reduce using rule 7
	"void"         reduce using rule 7
	%eof           reduce using rule 7


State 32

	VarDeclaration -> "int" name "[" num "]" ";" .      (rule 6)

	array          reduce using rule 6
	num            reduce using rule 6
	name           reduce using rule 6
	"{"            reduce using rule 6
	"("            reduce using rule 6
	";"            reduce using rule 6
	"int"          reduce using rule 6
	"void"         reduce using rule 6
	"if"           reduce using rule 6
	"while"        reduce using rule 6
	"return"       reduce using rule 6
	"read"         reduce using rule 6
	"write"        reduce using rule 6
	%eof           reduce using rule 6


State 33

	Param -> "int" name "[" "]" .                       (rule 14)

	")"            reduce using rule 14
	","            reduce using rule 14


State 34

	CompoundStmt -> "{" LocalDeclarations . StatementList "}"    (rule 15)
	LocalDeclarations -> LocalDeclarations . VarDeclaration    (rule 17)

	array          reduce using rule 37
	num            reduce using rule 37
	name           reduce using rule 37
	"{"            shift, and enter state 28
	"("            reduce using rule 37
	";"            shift, and enter state 47
	"int"          shift, and enter state 48
	"if"           shift, and enter state 49
	"while"        shift, and enter state 50
	"return"       shift, and enter state 51
	"read"         shift, and enter state 52
	"write"        shift, and enter state 53

	VarDeclaration goto state 35
	CompoundStmt   goto state 36
	StatementList  goto state 37
	Statement      goto state 38
	ExpressionStmt goto state 39
	SelectionStmt  goto state 40
	IterationStmt  goto state 41
	ReturnStmt     goto state 42
	ReadStmt       goto state 43
	WriteStmt      goto state 44
	Expression     goto state 45
	ExpressionHead goto state 46

State 35

	LocalDeclarations -> LocalDeclarations VarDeclaration .    (rule 17)

	array          reduce using rule 17
	num            reduce using rule 17
	name           reduce using rule 17
	"{"            reduce using rule 17
	"("            reduce using rule 17
	";"            reduce using rule 17
	"int"          reduce using rule 17
	"if"           reduce using rule 17
	"while"        reduce using rule 17
	"return"       reduce using rule 17
	"read"         reduce using rule 17
	"write"        reduce using rule 17


State 36

	Statement -> CompoundStmt .                         (rule 21)

	array          reduce using rule 21
	num            reduce using rule 21
	name           reduce using rule 21
	"{"            reduce using rule 21
	"}"            reduce using rule 21
	"("            reduce using rule 21
	";"            reduce using rule 21
	"if"           reduce using rule 21
	"else"         reduce using rule 21
	"while"        reduce using rule 21
	"return"       reduce using rule 21
	"read"         reduce using rule 21
	"write"        reduce using rule 21


State 37

	CompoundStmt -> "{" LocalDeclarations StatementList . "}"    (rule 15)
	StatementList -> StatementList . Statement          (rule 19)

	array          reduce using rule 37
	num            reduce using rule 37
	name           reduce using rule 37
	"{"            shift, and enter state 28
	"}"            shift, and enter state 74
	"("            reduce using rule 37
	";"            shift, and enter state 47
	"if"           shift, and enter state 49
	"while"        shift, and enter state 50
	"return"       shift, and enter state 51
	"read"         shift, and enter state 52
	"write"        shift, and enter state 53

	CompoundStmt   goto state 36
	Statement      goto state 73
	ExpressionStmt goto state 39
	SelectionStmt  goto state 40
	IterationStmt  goto state 41
	ReturnStmt     goto state 42
	ReadStmt       goto state 43
	WriteStmt      goto state 44
	Expression     goto state 45
	ExpressionHead goto state 46

State 38

	StatementList -> Statement .                        (rule 18)

	array          reduce using rule 18
	num            reduce using rule 18
	name           reduce using rule 18
	"{"            reduce using rule 18
	"}"            reduce using rule 18
	"("            reduce using rule 18
	";"            reduce using rule 18
	"if"           reduce using rule 18
	"while"        reduce using rule 18
	"return"       reduce using rule 18
	"read"         reduce using rule 18
	"write"        reduce using rule 18


State 39

	Statement -> ExpressionStmt .                       (rule 20)

	array          reduce using rule 20
	num            reduce using rule 20
	name           reduce using rule 20
	"{"            reduce using rule 20
	"}"            reduce using rule 20
	"("            reduce using rule 20
	";"            reduce using rule 20
	"if"           reduce using rule 20
	"else"         reduce using rule 20
	"while"        reduce using rule 20
	"return"       reduce using rule 20
	"read"         reduce using rule 20
	"write"        reduce using rule 20


State 40

	Statement -> SelectionStmt .                        (rule 22)

	array          reduce using rule 22
	num            reduce using rule 22
	name           reduce using rule 22
	"{"            reduce using rule 22
	"}"            reduce using rule 22
	"("            reduce using rule 22
	";"            reduce using rule 22
	"if"           reduce using rule 22
	"else"         reduce using rule 22
	"while"        reduce using rule 22
	"return"       reduce using rule 22
	"read"         reduce using rule 22
	"write"        reduce using rule 22


State 41

	Statement -> IterationStmt .                        (rule 23)

	array          reduce using rule 23
	num            reduce using rule 23
	name           reduce using rule 23
	"{"            reduce using rule 23
	"}"            reduce using rule 23
	"("            reduce using rule 23
	";"            reduce using rule 23
	"if"           reduce using rule 23
	"else"         reduce using rule 23
	"while"        reduce using rule 23
	"return"       reduce using rule 23
	"read"         reduce using rule 23
	"write"        reduce using rule 23


State 42

	Statement -> ReturnStmt .                           (rule 24)

	array          reduce using rule 24
	num            reduce using rule 24
	name           reduce using rule 24
	"{"            reduce using rule 24
	"}"            reduce using rule 24
	"("            reduce using rule 24
	";"            reduce using rule 24
	"if"           reduce using rule 24
	"else"         reduce using rule 24
	"while"        reduce using rule 24
	"return"       reduce using rule 24
	"read"         reduce using rule 24
	"write"        reduce using rule 24


State 43

	Statement -> ReadStmt .                             (rule 25)

	array          reduce using rule 25
	num            reduce using rule 25
	name           reduce using rule 25
	"{"            reduce using rule 25
	"}"            reduce using rule 25
	"("            reduce using rule 25
	";"            reduce using rule 25
	"if"           reduce using rule 25
	"else"         reduce using rule 25
	"while"        reduce using rule 25
	"return"       reduce using rule 25
	"read"         reduce using rule 25
	"write"        reduce using rule 25


State 44

	Statement -> WriteStmt .                            (rule 26)

	array          reduce using rule 26
	num            reduce using rule 26
	name           reduce using rule 26
	"{"            reduce using rule 26
	"}"            reduce using rule 26
	"("            reduce using rule 26
	";"            reduce using rule 26
	"if"           reduce using rule 26
	"else"         reduce using rule 26
	"while"        reduce using rule 26
	"return"       reduce using rule 26
	"read"         reduce using rule 26
	"write"        reduce using rule 26


State 45

	ExpressionStmt -> Expression . ";"                  (rule 27)

	";"            shift, and enter state 72


State 46

	Expression -> ExpressionHead . SimpleExpression     (rule 36)
	ExpressionHead -> ExpressionHead . Var "="          (rule 38)

	array          shift, and enter state 68
	num            shift, and enter state 69
	name           shift, and enter state 70
	"("            shift, and enter state 71

	Var            goto state 62
	SimpleExpressiongoto state 63
	AdditiveExpressiongoto state 64
	Term           goto state 65
	Factor         goto state 66
	Call           goto state 67

State 47

	ExpressionStmt -> ";" .                             (rule 28)

	array          reduce using rule 28
	num            reduce using rule 28
	name           reduce using rule 28
	"{"            reduce using rule 28
	"}"            reduce using rule 28
	"("            reduce using rule 28
	";"            reduce using rule 28
	"if"           reduce using rule 28
	"else"         reduce using rule 28
	"while"        reduce using rule 28
	"return"       reduce using rule 28
	"read"         reduce using rule 28
	"write"        reduce using rule 28


State 48

	VarDeclaration -> "int" . name ";"                  (rule 5)
	VarDeclaration -> "int" . name "[" num "]" ";"      (rule 6)

	name           shift, and enter state 61


State 49

	SelectionStmt -> "if" . "(" Expression ")" Statement    (rule 29)
	SelectionStmt -> "if" . "(" Expression ")" Statement "else" Statement    (rule 30)

	"("            shift, and enter state 60


State 50

	IterationStmt -> "while" . "(" Expression ")" Statement    (rule 31)

	"("            shift, and enter state 59


State 51

	ReturnStmt -> "return" . ";"                        (rule 32)
	ReturnStmt -> "return" . Expression ";"             (rule 33)

	array          reduce using rule 37
	num            reduce using rule 37
	name           reduce using rule 37
	"("            reduce using rule 37
	";"            shift, and enter state 58

	Expression     goto state 57
	ExpressionHead goto state 46

State 52

	ReadStmt -> "read" . Var ";"                        (rule 34)

	name           shift, and enter state 56

	Var            goto state 55

State 53

	WriteStmt -> "write" . Expression ";"               (rule 35)

	array          reduce using rule 37
	num            reduce using rule 37
	name           reduce using rule 37
	"("            reduce using rule 37

	Expression     goto state 54
	ExpressionHead goto state 46

State 54

	WriteStmt -> "write" Expression . ";"               (rule 35)

	";"            shift, and enter state 96


State 55

	ReadStmt -> "read" Var . ";"                        (rule 34)

	";"            shift, and enter state 95


State 56

	Var -> name .                                       (rule 39)
	Var -> name . "[" Expression "]"                    (rule 40)

	"["            shift, and enter state 76
	";"            reduce using rule 39


State 57

	ReturnStmt -> "return" Expression . ";"             (rule 33)

	";"            shift, and enter state 94


State 58

	ReturnStmt -> "return" ";" .                        (rule 32)

	array          reduce using rule 32
	num            reduce using rule 32
	name           reduce using rule 32
	"{"            reduce using rule 32
	"}"            reduce using rule 32
	"("            reduce using rule 32
	";"            reduce using rule 32
	"if"           reduce using rule 32
	"else"         reduce using rule 32
	"while"        reduce using rule 32
	"return"       reduce using rule 32
	"read"         reduce using rule 32
	"write"        reduce using rule 32


State 59

	IterationStmt -> "while" "(" . Expression ")" Statement    (rule 31)

	array          reduce using rule 37
	num            reduce using rule 37
	name           reduce using rule 37
	"("            reduce using rule 37

	Expression     goto state 93
	ExpressionHead goto state 46

State 60

	SelectionStmt -> "if" "(" . Expression ")" Statement    (rule 29)
	SelectionStmt -> "if" "(" . Expression ")" Statement "else" Statement    (rule 30)

	array          reduce using rule 37
	num            reduce using rule 37
	name           reduce using rule 37
	"("            reduce using rule 37

	Expression     goto state 92
	ExpressionHead goto state 46

State 61

	VarDeclaration -> "int" name . ";"                  (rule 5)
	VarDeclaration -> "int" name . "[" num "]" ";"      (rule 6)

	"["            shift, and enter state 11
	";"            shift, and enter state 13


State 62

	ExpressionHead -> ExpressionHead Var . "="          (rule 38)
	Factor -> Var .                                     (rule 60)

	"]"            reduce using rule 60
	")"            reduce using rule 60
	";"            reduce using rule 60
	","            reduce using rule 60
	"=="           reduce using rule 60
	"="            shift, and enter state 91
	"<="           reduce using rule 60
	"<"            reduce using rule 60
	">="           reduce using rule 60
	">"            reduce using rule 60
	"!="           reduce using rule 60
	"+"            reduce using rule 60
	"-"            reduce using rule 60
	"*"            reduce using rule 60
	"/"            reduce using rule 60


State 63

	Expression -> ExpressionHead SimpleExpression .     (rule 36)

	"]"            reduce using rule 36
	")"            reduce using rule 36
	";"            reduce using rule 36
	","            reduce using rule 36


State 64

	SimpleExpression -> AdditiveExpression .            (rule 41)
	SimpleExpression -> AdditiveExpression . Relop AdditiveExpression    (rule 42)
	AdditiveExpression -> AdditiveExpression . Addop Term    (rule 50)

	"]"            reduce using rule 41
	")"            reduce using rule 41
	";"            reduce using rule 41
	","            reduce using rule 41
	"=="           shift, and enter state 83
	"<="           shift, and enter state 84
	"<"            shift, and enter state 85
	">="           shift, and enter state 86
	">"            shift, and enter state 87
	"!="           shift, and enter state 88
	"+"            shift, and enter state 89
	"-"            shift, and enter state 90

	Relop          goto state 81
	Addop          goto state 82

State 65

	AdditiveExpression -> Term .                        (rule 49)
	Term -> Term . Multop Factor                        (rule 54)

	"]"            reduce using rule 49
	")"            reduce using rule 49
	";"            reduce using rule 49
	","            reduce using rule 49
	"=="           reduce using rule 49
	"<="           reduce using rule 49
	"<"            reduce using rule 49
	">="           reduce using rule 49
	">"            reduce using rule 49
	"!="           reduce using rule 49
	"+"            reduce using rule 49
	"-"            reduce using rule 49
	"*"            shift, and enter state 79
	"/"            shift, and enter state 80

	Multop         goto state 78

State 66

	Term -> Factor .                                    (rule 53)

	"]"            reduce using rule 53
	")"            reduce using rule 53
	";"            reduce using rule 53
	","            reduce using rule 53
	"=="           reduce using rule 53
	"<="           reduce using rule 53
	"<"            reduce using rule 53
	">="           reduce using rule 53
	">"            reduce using rule 53
	"!="           reduce using rule 53
	"+"            reduce using rule 53
	"-"            reduce using rule 53
	"*"            reduce using rule 53
	"/"            reduce using rule 53


State 67

	Factor -> Call .                                    (rule 61)

	"]"            reduce using rule 61
	")"            reduce using rule 61
	";"            reduce using rule 61
	","            reduce using rule 61
	"=="           reduce using rule 61
	"<="           reduce using rule 61
	"<"            reduce using rule 61
	">="           reduce using rule 61
	">"            reduce using rule 61
	"!="           reduce using rule 61
	"+"            reduce using rule 61
	"-"            reduce using rule 61
	"*"            reduce using rule 61
	"/"            reduce using rule 61


State 68

	Factor -> array .                                   (rule 59)

	"]"            reduce using rule 59
	")"            reduce using rule 59
	";"            reduce using rule 59
	","            reduce using rule 59
	"=="           reduce using rule 59
	"<="           reduce using rule 59
	"<"            reduce using rule 59
	">="           reduce using rule 59
	">"            reduce using rule 59
	"!="           reduce using rule 59
	"+"            reduce using rule 59
	"-"            reduce using rule 59
	"*"            reduce using rule 59
	"/"            reduce using rule 59


State 69

	Factor -> num .                                     (rule 58)

	"]"            reduce using rule 58
	")"            reduce using rule 58
	";"            reduce using rule 58
	","            reduce using rule 58
	"=="           reduce using rule 58
	"<="           reduce using rule 58
	"<"            reduce using rule 58
	">="           reduce using rule 58
	">"            reduce using rule 58
	"!="           reduce using rule 58
	"+"            reduce using rule 58
	"-"            reduce using rule 58
	"*"            reduce using rule 58
	"/"            reduce using rule 58


State 70

	Var -> name .                                       (rule 39)
	Var -> name . "[" Expression "]"                    (rule 40)
	Call -> name . "(" Args ")"                         (rule 62)

	"["            shift, and enter state 76
	"]"            reduce using rule 39
	"("            shift, and enter state 77
	")"            reduce using rule 39
	";"            reduce using rule 39
	","            reduce using rule 39
	"=="           reduce using rule 39
	"="            reduce using rule 39
	"<="           reduce using rule 39
	"<"            reduce using rule 39
	">="           reduce using rule 39
	">"            reduce using rule 39
	"!="           reduce using rule 39
	"+"            reduce using rule 39
	"-"            reduce using rule 39
	"*"            reduce using rule 39
	"/"            reduce using rule 39


State 71

	Factor -> "(" . Expression ")"                      (rule 57)

	array          reduce using rule 37
	num            reduce using rule 37
	name           reduce using rule 37
	"("            reduce using rule 37

	Expression     goto state 75
	ExpressionHead goto state 46

State 72

	ExpressionStmt -> Expression ";" .                  (rule 27)

	array          reduce using rule 27
	num            reduce using rule 27
	name           reduce using rule 27
	"{"            reduce using rule 27
	"}"            reduce using rule 27
	"("            reduce using rule 27
	";"            reduce using rule 27
	"if"           reduce using rule 27
	"else"         reduce using rule 27
	"while"        reduce using rule 27
	"return"       reduce using rule 27
	"read"         reduce using rule 27
	"write"        reduce using rule 27


State 73

	StatementList -> StatementList Statement .          (rule 19)

	array          reduce using rule 19
	num            reduce using rule 19
	name           reduce using rule 19
	"{"            reduce using rule 19
	"}"            reduce using rule 19
	"("            reduce using rule 19
	";"            reduce using rule 19
	"if"           reduce using rule 19
	"while"        reduce using rule 19
	"return"       reduce using rule 19
	"read"         reduce using rule 19
	"write"        reduce using rule 19


State 74

	CompoundStmt -> "{" LocalDeclarations StatementList "}" .    (rule 15)

	array          reduce using rule 15
	num            reduce using rule 15
	name           reduce using rule 15
	"{"            reduce using rule 15
	"}"            reduce using rule 15
	"("            reduce using rule 15
	";"            reduce using rule 15
	"int"          reduce using rule 15
	"void"         reduce using rule 15
	"if"           reduce using rule 15
	"else"         reduce using rule 15
	"while"        reduce using rule 15
	"return"       reduce using rule 15
	"read"         reduce using rule 15
	"write"        reduce using rule 15
	%eof           reduce using rule 15


State 75

	Factor -> "(" Expression . ")"                      (rule 57)

	")"            shift, and enter state 106


State 76

	Var -> name "[" . Expression "]"                    (rule 40)

	array          reduce using rule 37
	num            reduce using rule 37
	name           reduce using rule 37
	"("            reduce using rule 37

	Expression     goto state 105
	ExpressionHead goto state 46

State 77

	Call -> name "(" . Args ")"                         (rule 62)

	array          reduce using rule 37
	num            reduce using rule 37
	name           reduce using rule 37
	"("            reduce using rule 37
	")"            reduce using rule 63
	","            reduce using rule 63

	Expression     goto state 103
	ExpressionHead goto state 46
	Args           goto state 104

State 78

	Term -> Term Multop . Factor                        (rule 54)

	array          shift, and enter state 68
	num            shift, and enter state 69
	name           shift, and enter state 70
	"("            shift, and enter state 71

	Var            goto state 99
	Factor         goto state 102
	Call           goto state 67

State 79

	Multop -> "*" .                                     (rule 55)

	array          reduce using rule 55
	num            reduce using rule 55
	name           reduce using rule 55
	"("            reduce using rule 55


State 80

	Multop -> "/" .                                     (rule 56)

	array          reduce using rule 56
	num            reduce using rule 56
	name           reduce using rule 56
	"("            reduce using rule 56


State 81

	SimpleExpression -> AdditiveExpression Relop . AdditiveExpression    (rule 42)

	array          shift, and enter state 68
	num            shift, and enter state 69
	name           shift, and enter state 70
	"("            shift, and enter state 71

	Var            goto state 99
	AdditiveExpressiongoto state 101
	Term           goto state 65
	Factor         goto state 66
	Call           goto state 67

State 82

	AdditiveExpression -> AdditiveExpression Addop . Term    (rule 50)

	array          shift, and enter state 68
	num            shift, and enter state 69
	name           shift, and enter state 70
	"("            shift, and enter state 71

	Var            goto state 99
	Term           goto state 100
	Factor         goto state 66
	Call           goto state 67

State 83

	Relop -> "==" .                                     (rule 47)

	array          reduce using rule 47
	num            reduce using rule 47
	name           reduce using rule 47
	"("            reduce using rule 47


State 84

	Relop -> "<=" .                                     (rule 43)

	array          reduce using rule 43
	num            reduce using rule 43
	name           reduce using rule 43
	"("            reduce using rule 43


State 85

	Relop -> "<" .                                      (rule 44)

	array          reduce using rule 44
	num            reduce using rule 44
	name           reduce using rule 44
	"("            reduce using rule 44


State 86

	Relop -> ">=" .                                     (rule 46)

	array          reduce using rule 46
	num            reduce using rule 46
	name           reduce using rule 46
	"("            reduce using rule 46


State 87

	Relop -> ">" .                                      (rule 45)

	array          reduce using rule 45
	num            reduce using rule 45
	name           reduce using rule 45
	"("            reduce using rule 45


State 88

	Relop -> "!=" .                                     (rule 48)

	array          reduce using rule 48
	num            reduce using rule 48
	name           reduce using rule 48
	"("            reduce using rule 48


State 89

	Addop -> "+" .                                      (rule 51)

	array          reduce using rule 51
	num            reduce using rule 51
	name           reduce using rule 51
	"("            reduce using rule 51


State 90

	Addop -> "-" .                                      (rule 52)

	array          reduce using rule 52
	num            reduce using rule 52
	name           reduce using rule 52
	"("            reduce using rule 52


State 91

	ExpressionHead -> ExpressionHead Var "=" .          (rule 38)

	array          reduce using rule 38
	num            reduce using rule 38
	name           reduce using rule 38
	"("            reduce using rule 38


State 92

	SelectionStmt -> "if" "(" Expression . ")" Statement    (rule 29)
	SelectionStmt -> "if" "(" Expression . ")" Statement "else" Statement    (rule 30)

	")"            shift, and enter state 98


State 93

	IterationStmt -> "while" "(" Expression . ")" Statement    (rule 31)

	")"            shift, and enter state 97


State 94

	ReturnStmt -> "return" Expression ";" .             (rule 33)

	array          reduce using rule 33
	num            reduce using rule 33
	name           reduce using rule 33
	"{"            reduce using rule 33
	"}"            reduce using rule 33
	"("            reduce using rule 33
	";"            reduce using rule 33
	"if"           reduce using rule 33
	"else"         reduce using rule 33
	"while"        reduce using rule 33
	"return"       reduce using rule 33
	"read"         reduce using rule 33
	"write"        reduce using rule 33


State 95

	ReadStmt -> "read" Var ";" .                        (rule 34)

	array          reduce using rule 34
	num            reduce using rule 34
	name           reduce using rule 34
	"{"            reduce using rule 34
	"}"            reduce using rule 34
	"("            reduce using rule 34
	";"            reduce using rule 34
	"if"           reduce using rule 34
	"else"         reduce using rule 34
	"while"        reduce using rule 34
	"return"       reduce using rule 34
	"read"         reduce using rule 34
	"write"        reduce using rule 34


State 96

	WriteStmt -> "write" Expression ";" .               (rule 35)

	array          reduce using rule 35
	num            reduce using rule 35
	name           reduce using rule 35
	"{"            reduce using rule 35
	"}"            reduce using rule 35
	"("            reduce using rule 35
	";"            reduce using rule 35
	"if"           reduce using rule 35
	"else"         reduce using rule 35
	"while"        reduce using rule 35
	"return"       reduce using rule 35
	"read"         reduce using rule 35
	"write"        reduce using rule 35


State 97

	IterationStmt -> "while" "(" Expression ")" . Statement    (rule 31)

	array          reduce using rule 37
	num            reduce using rule 37
	name           reduce using rule 37
	"{"            shift, and enter state 28
	"("            reduce using rule 37
	";"            shift, and enter state 47
	"if"           shift, and enter state 49
	"while"        shift, and enter state 50
	"return"       shift, and enter state 51
	"read"         shift, and enter state 52
	"write"        shift, and enter state 53

	CompoundStmt   goto state 36
	Statement      goto state 111
	ExpressionStmt goto state 39
	SelectionStmt  goto state 40
	IterationStmt  goto state 41
	ReturnStmt     goto state 42
	ReadStmt       goto state 43
	WriteStmt      goto state 44
	Expression     goto state 45
	ExpressionHead goto state 46

State 98

	SelectionStmt -> "if" "(" Expression ")" . Statement    (rule 29)
	SelectionStmt -> "if" "(" Expression ")" . Statement "else" Statement    (rule 30)

	array          reduce using rule 37
	num            reduce using rule 37
	name           reduce using rule 37
	"{"            shift, and enter state 28
	"("            reduce using rule 37
	";"            shift, and enter state 47
	"if"           shift, and enter state 49
	"while"        shift, and enter state 50
	"return"       shift, and enter state 51
	"read"         shift, and enter state 52
	"write"        shift, and enter state 53

	CompoundStmt   goto state 36
	Statement      goto state 110
	ExpressionStmt goto state 39
	SelectionStmt  goto state 40
	IterationStmt  goto state 41
	ReturnStmt     goto state 42
	ReadStmt       goto state 43
	WriteStmt      goto state 44
	Expression     goto state 45
	ExpressionHead goto state 46

State 99

	Factor -> Var .                                     (rule 60)

	"]"            reduce using rule 60
	")"            reduce using rule 60
	";"            reduce using rule 60
	","            reduce using rule 60
	"=="           reduce using rule 60
	"<="           reduce using rule 60
	"<"            reduce using rule 60
	">="           reduce using rule 60
	">"            reduce using rule 60
	"!="           reduce using rule 60
	"+"            reduce using rule 60
	"-"            reduce using rule 60
	"*"            reduce using rule 60
	"/"            reduce using rule 60


State 100

	AdditiveExpression -> AdditiveExpression Addop Term .    (rule 50)
	Term -> Term . Multop Factor                        (rule 54)

	"]"            reduce using rule 50
	")"            reduce using rule 50
	";"            reduce using rule 50
	","            reduce using rule 50
	"=="           reduce using rule 50
	"<="           reduce using rule 50
	"<"            reduce using rule 50
	">="           reduce using rule 50
	">"            reduce using rule 50
	"!="           reduce using rule 50
	"+"            reduce using rule 50
	"-"            reduce using rule 50
	"*"            shift, and enter state 79
	"/"            shift, and enter state 80

	Multop         goto state 78

State 101

	SimpleExpression -> AdditiveExpression Relop AdditiveExpression .    (rule 42)
	AdditiveExpression -> AdditiveExpression . Addop Term    (rule 50)

	"]"            reduce using rule 42
	")"            reduce using rule 42
	";"            reduce using rule 42
	","            reduce using rule 42
	"+"            shift, and enter state 89
	"-"            shift, and enter state 90

	Addop          goto state 82

State 102

	Term -> Term Multop Factor .                        (rule 54)

	"]"            reduce using rule 54
	")"            reduce using rule 54
	";"            reduce using rule 54
	","            reduce using rule 54
	"=="           reduce using rule 54
	"<="           reduce using rule 54
	"<"            reduce using rule 54
	">="           reduce using rule 54
	">"            reduce using rule 54
	"!="           reduce using rule 54
	"+"            reduce using rule 54
	"-"            reduce using rule 54
	"*"            reduce using rule 54
	"/"            reduce using rule 54


State 103

	Args -> Expression .                                (rule 64)

	")"            reduce using rule 64
	","            reduce using rule 64


State 104

	Call -> name "(" Args . ")"                         (rule 62)
	Args -> Args . "," Expression                       (rule 65)

	")"            shift, and enter state 108
	","            shift, and enter state 109


State 105

	Var -> name "[" Expression . "]"                    (rule 40)

	"]"            shift, and enter state 107


State 106

	Factor -> "(" Expression ")" .                      (rule 57)

	"]"            reduce using rule 57
	")"            reduce using rule 57
	";"            reduce using rule 57
	","            reduce using rule 57
	"=="           reduce using rule 57
	"<="           reduce using rule 57
	"<"            reduce using rule 57
	">="           reduce using rule 57
	">"            reduce using rule 57
	"!="           reduce using rule 57
	"+"            reduce using rule 57
	"-"            reduce using rule 57
	"*"            reduce using rule 57
	"/"            reduce using rule 57


State 107

	Var -> name "[" Expression "]" .                    (rule 40)

	"]"            reduce using rule 40
	")"            reduce using rule 40
	";"            reduce using rule 40
	","            reduce using rule 40
	"=="           reduce using rule 40
	"="            reduce using rule 40
	"<="           reduce using rule 40
	"<"            reduce using rule 40
	">="           reduce using rule 40
	">"            reduce using rule 40
	"!="           reduce using rule 40
	"+"            reduce using rule 40
	"-"            reduce using rule 40
	"*"            reduce using rule 40
	"/"            reduce using rule 40


State 108

	Call -> name "(" Args ")" .                         (rule 62)

	"]"            reduce using rule 62
	")"            reduce using rule 62
	";"            reduce using rule 62
	","            reduce using rule 62
	"=="           reduce using rule 62
	"<="           reduce using rule 62
	"<"            reduce using rule 62
	">="           reduce using rule 62
	">"            reduce using rule 62
	"!="           reduce using rule 62
	"+"            reduce using rule 62
	"-"            reduce using rule 62
	"*"            reduce using rule 62
	"/"            reduce using rule 62


State 109

	Args -> Args "," . Expression                       (rule 65)

	array          reduce using rule 37
	num            reduce using rule 37
	name           reduce using rule 37
	"("            reduce using rule 37

	Expression     goto state 113
	ExpressionHead goto state 46

State 110

	SelectionStmt -> "if" "(" Expression ")" Statement .    (rule 29)
	SelectionStmt -> "if" "(" Expression ")" Statement . "else" Statement    (rule 30)

	array          reduce using rule 29
	num            reduce using rule 29
	name           reduce using rule 29
	"{"            reduce using rule 29
	"}"            reduce using rule 29
	"("            reduce using rule 29
	";"            reduce using rule 29
	"if"           reduce using rule 29
	"else"         shift, and enter state 112
	"while"        reduce using rule 29
	"return"       reduce using rule 29
	"read"         reduce using rule 29
	"write"        reduce using rule 29


State 111

	IterationStmt -> "while" "(" Expression ")" Statement .    (rule 31)

	array          reduce using rule 31
	num            reduce using rule 31
	name           reduce using rule 31
	"{"            reduce using rule 31
	"}"            reduce using rule 31
	"("            reduce using rule 31
	";"            reduce using rule 31
	"if"           reduce using rule 31
	"else"         reduce using rule 31
	"while"        reduce using rule 31
	"return"       reduce using rule 31
	"read"         reduce using rule 31
	"write"        reduce using rule 31


State 112

	SelectionStmt -> "if" "(" Expression ")" Statement "else" . Statement    (rule 30)

	array          reduce using rule 37
	num            reduce using rule 37
	name           reduce using rule 37
	"{"            shift, and enter state 28
	"("            reduce using rule 37
	";"            shift, and enter state 47
	"if"           shift, and enter state 49
	"while"        shift, and enter state 50
	"return"       shift, and enter state 51
	"read"         shift, and enter state 52
	"write"        shift, and enter state 53

	CompoundStmt   goto state 36
	Statement      goto state 114
	ExpressionStmt goto state 39
	SelectionStmt  goto state 40
	IterationStmt  goto state 41
	ReturnStmt     goto state 42
	ReadStmt       goto state 43
	WriteStmt      goto state 44
	Expression     goto state 45
	ExpressionHead goto state 46

State 113

	Args -> Args "," Expression .                       (rule 65)

	")"            reduce using rule 65
	","            reduce using rule 65


State 114

	SelectionStmt -> "if" "(" Expression ")" Statement "else" Statement .    (rule 30)

	array          reduce using rule 30
	num            reduce using rule 30
	name           reduce using rule 30
	"{"            reduce using rule 30
	"}"            reduce using rule 30
	"("            reduce using rule 30
	";"            reduce using rule 30
	"if"           reduce using rule 30
	"else"         reduce using rule 30
	"while"        reduce using rule 30
	"return"       reduce using rule 30
	"read"         reduce using rule 30
	"write"        reduce using rule 30


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 66
Number of terminals: 30
Number of non-terminals: 30
Number of states: 115
